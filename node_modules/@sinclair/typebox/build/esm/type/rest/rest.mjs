<<<<<<< HEAD
import { CloneRest } from '../clone/type.mjs';
=======
>>>>>>> dd36f794aec55329dba52bd59bdd29e0d232b50c
// ------------------------------------------------------------------
// TypeGuard
// ------------------------------------------------------------------
import { IsIntersect, IsUnion, IsTuple } from '../guard/kind.mjs';
// prettier-ignore
function RestResolve(T) {
<<<<<<< HEAD
    return (IsIntersect(T) ? CloneRest(T.allOf) :
        IsUnion(T) ? CloneRest(T.anyOf) :
            IsTuple(T) ? CloneRest(T.items ?? []) :
=======
    return (IsIntersect(T) ? T.allOf :
        IsUnion(T) ? T.anyOf :
            IsTuple(T) ? T.items ?? [] :
>>>>>>> dd36f794aec55329dba52bd59bdd29e0d232b50c
                []);
}
/** `[Json]` Extracts interior Rest elements from Tuple, Intersect and Union types */
export function Rest(T) {
<<<<<<< HEAD
    return CloneRest(RestResolve(T));
=======
    return RestResolve(T);
>>>>>>> dd36f794aec55329dba52bd59bdd29e0d232b50c
}
