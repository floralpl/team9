import { MappedResult } from '../mapped/index.mjs';
import { IndexPropertyKeys } from './indexed-property-keys.mjs';
import { Index } from './index.mjs';
// prettier-ignore
<<<<<<< HEAD
function FromProperties(T, P, options) {
    const Acc = {};
    for (const K2 of Object.getOwnPropertyNames(P)) {
        Acc[K2] = Index(T, IndexPropertyKeys(P[K2]), options);
    }
    return Acc;
}
// prettier-ignore
function FromMappedResult(T, R, options) {
    return FromProperties(T, R.properties, options);
}
// prettier-ignore
export function IndexFromMappedResult(T, R, options) {
    const P = FromMappedResult(T, R, options);
    return MappedResult(P);
=======
function FromProperties(type, properties, options) {
    const result = {};
    for (const K2 of Object.getOwnPropertyNames(properties)) {
        result[K2] = Index(type, IndexPropertyKeys(properties[K2]), options);
    }
    return result;
}
// prettier-ignore
function FromMappedResult(type, mappedResult, options) {
    return FromProperties(type, mappedResult.properties, options);
}
// prettier-ignore
export function IndexFromMappedResult(type, mappedResult, options) {
    const properties = FromMappedResult(type, mappedResult, options);
    return MappedResult(properties);
>>>>>>> dd36f794aec55329dba52bd59bdd29e0d232b50c
}
