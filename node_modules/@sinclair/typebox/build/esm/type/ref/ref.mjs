<<<<<<< HEAD
import { Kind } from '../symbols/index.mjs';
// ------------------------------------------------------------------
// ValueGuard
// ------------------------------------------------------------------
import { IsString, IsUndefined } from '../guard/value.mjs';
/** `[Json]` Creates a Ref type. */
export function Ref(unresolved, options = {}) {
    if (IsString(unresolved))
        return { ...options, [Kind]: 'Ref', $ref: unresolved };
    if (IsUndefined(unresolved.$id))
        throw new Error('Reference target type must specify an $id');
    return {
        ...options,
        [Kind]: 'Ref',
        $ref: unresolved.$id,
    };
=======
import { TypeBoxError } from '../error/index.mjs';
import { CreateType } from '../create/type.mjs';
import { Kind } from '../symbols/index.mjs';
/** `[Json]` Creates a Ref type. The referenced type must contain a $id */
export function Ref(...args) {
    const [$ref, options] = typeof args[0] === 'string' ? [args[0], args[1]] : [args[0].$id, args[1]];
    if (typeof $ref !== 'string')
        throw new TypeBoxError('Ref: $ref must be a string');
    return CreateType({ [Kind]: 'Ref', $ref }, options);
>>>>>>> dd36f794aec55329dba52bd59bdd29e0d232b50c
}
